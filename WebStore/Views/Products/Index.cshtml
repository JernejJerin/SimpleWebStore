@model Tuple <IEnumerable < WebStore.Models.Category >, PagedList.IPagedList < WebStore.Models.Product >>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Products";
}

<div class="row">

    <div class="col-md-3">
        <p class="lead">@ViewBag.Title</p>
        <div class="list-group">
            @foreach (var item in Model.Item1) 
            {
                if (ViewBag.Category != null && ViewBag.Category == item.ID)
                {
                    @Html.ActionLink(item.CategoryName, "Index", "Products", new { id = item.ID }, new { @class = "list-group-item active" }) 
                }
                else
                {
                    @Html.ActionLink(item.CategoryName, "Index", "Products", new { id = item.ID }, new { @class = "list-group-item" })
                }
                    
            }
        </div>

        <p>
            @if (User.Identity.IsAuthenticated)
            {
                if (User.IsInRole("canEditProducts"))
                {
                    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary btn-lg" })
                }
            }
        </p>

        @using (Html.BeginForm("Index", "Products", FormMethod.Get))
        {
            <p>
                Find by product name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" class="btn btn-info btn-sm" />
            </p>
        }
    </div>

    <div class="col-md-9">

        <div class="row carousel-holder">

            <div class="col-md-12">
                <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
                    <ol class="carousel-indicators">
                        <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
                        <li data-target="#carousel-example-generic" data-slide-to="1"></li>
                        <li data-target="#carousel-example-generic" data-slide-to="2"></li>
                    </ol>
                    <div class="carousel-inner">
                        <div class="item active">
                            <img class="slide-image" src="https://srcwebstore.blob.core.windows.net/images/sacr1.jpg" alt="">
                        </div>
                        <div class="item">
                            <img class="slide-image" src="https://srcwebstore.blob.core.windows.net/images/sacr2.jpg" alt="">
                        </div>
                        <div class="item">
                            <img class="slide-image" src="https://srcwebstore.blob.core.windows.net/images/tvds1.jpg" alt="">
                        </div>
                    </div>
                    <a class="left carousel-control" href="#carousel-example-generic" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left"></span>
                    </a>
                    <a class="right carousel-control" href="#carousel-example-generic" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right"></span>
                    </a>
                </div>
            </div>

        </div>

        <div class="row">
            <table class="table">
                <tr>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(tuple => tuple.Item2.FirstOrDefault().ProductName).ToHtmlString(), "Index",
                            new
                            {
                                sortOrder = ViewBag.ProductNameSortParm,
                                currentFilter = ViewBag.CurrentFilter
                            }
                        )
                    </th>
                    <th>
                        @Html.DisplayNameFor(tuple => tuple.Item2.FirstOrDefault().ShortDescription)
                    </th>
                    <th>
                        @Html.DisplayNameFor(tuple => tuple.Item2.FirstOrDefault().ImageURL)
                    </th>
                    <th>
                        @Html.ActionLink(Html.DisplayNameFor(tuple => tuple.Item2.FirstOrDefault().UnitPrice).ToHtmlString(), "Index",
                new
                {
                    sortOrder = ViewBag.PriceSortParm,
                    currentFilter = ViewBag.CurrentFilter
                }
            )
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Item2)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td style="width: 150px;">
                            @Html.DisplayFor(modelItem => item.ShortDescription)
                        </td>
                        <td>
                            <img src="@item.ImageURL" alt="Product image" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitPrice)
                        </td>
                        <td>
                            @if (User.Identity.IsAuthenticated)
                            {
                                if (User.IsInRole("canEditProducts"))
                                {
                                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-warning btn-xs", @style = "margin-right: 4px;" })
                                    @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-danger btn-xs" })
                                }
                            }
                            @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "btn btn-info btn-xs" })
                        </td>
                    </tr>
                }

            </table>
            <br />
            Page @(Model.Item2.PageCount < Model.Item2.PageNumber ? 0 : Model.Item2.PageNumber) of @Model.Item2.PageCount

            @Html.PagedListPager(Model.Item2, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>

    </div>

</div>