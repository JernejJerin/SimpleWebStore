@model PagedList.IPagedList<WebStore.Models.Product>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Products";
}

<h2>Products</h2>

<p>
    @if (User.Identity.IsAuthenticated)
    {
        if (User.IsInRole("canEditProducts"))
        {
            @Html.ActionLink("Create New", "Create")
        }
    }
</p>

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <p>
        Find by product name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().ProductName).ToHtmlString(), "Index", 
                new { 
                    sortOrder = ViewBag.ProductNameSortParm,
                    currentFilter = ViewBag.CurrentFilter
                }
            )
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ImageURL)
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().UnitPrice).ToHtmlString(), "Index", 
                new { 
                    sortOrder = ViewBag.PriceSortParm,
                    currentFilter = ViewBag.CurrentFilter
                }
            )
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImageURL)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UnitPrice)
        </td>
        <td>
            @if (User.Identity.IsAuthenticated)
            {
                if (User.IsInRole("canEditProducts"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id=item.ID }) 
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                }
            }
            @Html.ActionLink("Details", "Details", new { id = item.ID })
        </td>
    </tr>
}

</table>
<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
